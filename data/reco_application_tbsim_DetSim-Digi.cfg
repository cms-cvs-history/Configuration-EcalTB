process ECALTBH4  = 
{

   service = MessageLogger
   {
      	untracked vstring destinations = {"cout"}
     	untracked PSet cout = {untracked string threshold = "INFO"
				               untracked PSet INFO     = { untracked int32 limit = -1 }
                              }
   }  	
	   
   # service = Timing {}

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 12345
         untracked uint32 g4SimHits = 9876
      }
   }
      
   #
   # Vertex and beam onfiguration specific for a given ECAL target crystal 
   #
   include "SimG4CMS/EcalTestBeam/test/data/crystal1104.cff"

   # flat random E-gun
   #
   source = FlatRandomEGunSource
   {
      untracked int32 maxEvents = 2
      untracked PSet PGunParameters =
      {
         # you can request more than 1 particle
         untracked vint32 PartID = {11}
         using common_beam_direction_parameters
         untracked double MinE   = 120.
         untracked double MaxE   = 120.
      }
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }

   module VtxSmeared = VertexGenerator 
   {
         string type = "IOMC/EventVertexGenerators/BeamProfileVertexGenerator"
         using common_beam_direction_parameters
         untracked double BeamSigmaX = 2.4               
         untracked double BeamSigmaY = 2.4
         untracked bool GaussianProfile = false
   }

   #
   # SIM : simulated hits + additional H4 TB objects 
   #
   include "Configuration/EcalTB/data/simulation_tbsim.cff"
   replace g4SimHits.Physics.type = "SimG4Core/Physics/QGSP"

   #
   # DIGI : H4 TB digitization 
   #
   include "Configuration/EcalTB/data/digitization_tbsim.cff"

   # Root/Pool output
   #
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "ECALH4TB_detsim_digi.root" 
   }
   
   sequence doSimHits   = { VtxSmeared, g4SimHits }
   sequence doSimTB     = { SimEcalTBG4Object, SimEcalTBHodoscope, SimEcalEventHeader }
   sequence doEcalDigis = { mix, ecalUnsuppressedDigis }
   path p1 = { doSimHits, doSimTB, doEcalDigis }
   endpath outpath = { o1 }
   
}		
